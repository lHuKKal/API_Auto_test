{"name": "test_create_new_place", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_google_maps.TestCreatePlace object at 0x0000010E7EBEE1E0>\n\n    @allure.description(\"CRUD New Location\")\n    def test_create_new_place(self):\n    \n        print(\"Метод POST\")\n        result_post: Response = GoogleMapsApi.create_new_place()\n    \n        check_post = result_post.json()\n        place_id = check_post.get(\"place_id\")\n    \n        Checking.check_status_code(result_post, 200)\n        Checking.check_existing_fields(result_post, ['status', 'place_id', 'scope', 'reference', 'id'])\n        Checking.check_contains_field(result_post, 'status', 'OK')\n    \n        fields = json.loads(result_post.text)  # получить список полей ЛАЙФАК\n        print(list(fields))\n    \n        print(\"Метод GET POST\")\n        result_get: Response = GoogleMapsApi.get_new_place(place_id)  # Проверка, что локация была создана методом POST\n    \n        Checking.check_status_code(result_get, 200)\n        Checking.check_existing_fields(result_get,\n                                       ['location', 'accuracy', 'name', 'phone_number', 'address', 'types', 'website',\n                                        'language'])\n        Checking.check_contains_field(result_get, 'address', '29, side layout, cohen 09')\n    \n        print(\"Метод PUT\")\n        result_put: Response = GoogleMapsApi.put_new_place(place_id)\n    \n        Checking.check_existing_fields(result_put, ['msg'])\n    \n        print(\"Метод GET PUT\")\n        result_get: Response = GoogleMapsApi.get_new_place(place_id)  # Проверка, что данные обновились методом PUT\n    \n        Checking.check_status_code(result_put, 200)\n        Checking.check_existing_fields(result_get,\n                                       ['location', 'accuracy', 'name', 'phone_number', 'address', 'types', 'website',\n                                        'language'])\n        Checking.check_contains_field(result_get, 'address', '100 Lenina street, RU (Updated)')\n    \n        print(\"Метод DELETE\")\n        result_delete: Response = GoogleMapsApi.delete_place(place_id)  # Удаление созданной локации\n    \n>       Checking.check_status_code(result_delete, 300)\n\ntests\\test_google_maps.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, status_code = 300\n\n    @staticmethod\n    def check_status_code(response: Response, status_code):\n>       assert status_code == response.status_code\nE       AssertionError\n\nutils\\Checking.py:12: AssertionError"}, "description": "CRUD New Location", "steps": [{"name": "POST", "status": "passed", "start": 1709210774874, "stop": 1709210787843}, {"name": "GET", "status": "passed", "start": 1709210787844, "stop": 1709210789292}, {"name": "PUT", "status": "passed", "start": 1709210789292, "stop": 1709210791426}, {"name": "GET", "status": "passed", "start": 1709210791427, "stop": 1709210793470}, {"name": "DELETE", "status": "passed", "start": 1709210793471, "stop": 1709210795452}], "attachments": [{"name": "stdout", "source": "7f317aef-84ba-48fc-b076-356735d0e73a-attachment.txt", "type": "text/plain"}], "start": 1709210774874, "stop": 1709210795452, "uuid": "316161da-9b33-4834-acb4-83b7ef7d3e2f", "historyId": "b3f9d76c01533ec03ae5d4858d86adc6", "testCaseId": "b3f9d76c01533ec03ae5d4858d86adc6", "fullName": "tests.test_google_maps.TestCreatePlace#test_create_new_place", "labels": [{"name": "epic", "value": "Test Create New Location"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_google_maps"}, {"name": "subSuite", "value": "TestCreatePlace"}, {"name": "host", "value": "HuKKa"}, {"name": "thread", "value": "9292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_google_maps"}]}